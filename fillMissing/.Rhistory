dim(plot.dat2)
dim(plot.dat3)
plot.dat3[662,]
dim(na.exclude(plot.dat3))
plot.dat3 = na.exclude(plot.dat3)
min(plot.dat3$freq)
test = lm(npatappAdj~xrdAdj +factor(industryName), data = plot.dat3)
summary(test)
anon.dat[anon.dat$school_anon != 24873,]
anon.dat = read.csv("inputs/anon_data2.csv", stringsAsFactors=FALSE)
#this file compiles a cleaned input file for the regressions from all model runs
#libraries ====================================================================
library(plyr)
library(ggplot2)
library(descr)
library(tseries)
library(gridExtra)
library(reshape2)
library(MARSS)
library(KFAS)
library(car)
library(mlogit)
library(nnet)
library(MASS)
library(lme4)
library(glm2)
install.packages("lme4")
install.packages("glm2")
library(lme4)
library(glm2)
dim(companies.dat)
lenght(levels(factor(companies.dat$companyName))
)
length(levels(factor(companies.dat$companyName)))
length(levels(factor(reg.dat$companyName)))
FREQTABLE = freq(ordered(companies.dat$companyName), plot=FALSE) #many industries have over 100 entries
FREQTABLE
length(FREQTABLE[FREQTABLE[,1]>=10,][,1])
length(FREQTABLE[FREQTABLE[,1]>=15,][,1])
FREQTABLE = data.frame(companyName = as.factor(rownames(FREQTABLE)), freq = FREQTABLE[,1])
moreTen.dat = data.frame(merge(x = companies.dat, y = FREQTABLE, by = "industryName", all.x = TRUE))
colnames(companies.dat)
moreTen.dat = data.frame(merge(x = companies.dat, y = FREQTABLE, by = "companyName", all.x = TRUE))
colnames(moreTen.dat)
moreTen.dat = moreTen.dat[moreTen/dat$freq > 10,]
moreTen.dat = moreTen.dat[moreTen.dat$freq >= 10,]
regTen.dat = merge(x = moreTen.dat, y = industries.dat, by = "id", all.x = TRUE)
colnames(regTen.dat)
colnames(regTen.dat) = c("id", "companyName", "industryName", "datayear", "state_co", "stError_co", "strictFlag_co", "companyid", "drop", "drop2","drop3", "state_ind", "stError_ind", "strictFlag_ind", "onlyWorkingFlag")
reg.dat= regTen.dat[,c(1:8, 12:15)]
regTen.dat= regTen.dat[,c(1:8, 12:15)]
regTen.dat = merge(regTen.dat, RDDATA, by = "companyid", all.x = TRUE) #problem arises here!
regTen.dat.nodeletes = regTen.dat
regTen.dat = regTen.dat[!is.na(regTen.dat$state_co) & !is.na(regTen.dat$state_ind),]
regTen.dat = regTen.dat[!is.na(regTen.dat$npatappAdj),]
all.mod = lm(npatappAdj~state_co + stError_co + state_ind + stError_ind, data = regTen.dat)
summary(All.mod)
summary(all.mod)
colnames(regTen.dat)
library(plm)
install.packages("plm")
colnames(reg.dat)
panel.dat <- pdata.frame(reg.dat, index = c("companyName", "datayear"), drop.index = TRUE, row.names = TRUE
)
library(plm)
panel.dat <- pdata.frame(reg.dat, index = c("companyName", "datayear"), drop.index = TRUE, row.names = TRUE)
colnames(reg.dat)
load("workCosonlynotstrict.RData")
#TBD note that we do not have raw R&D for industries or companies in this dataset, but we could get these if they become necessary
industries.dat$onlyWorkingFlag = 0
missindstrict.dat = read.csv("missingindustriesstrict.csv")
keepInds = c(800,1400,1540,2090,2092,2300,2340,2451,2452,2611,2621,2840,2844,2870,2911,3089,3250,3270,3317,3360,3420,3430,3442,3444,3452,3550,3569,3571,3590,3630,3728,3812,3824,3844) #industries that run with strict restricition if only working companies are used
missindstrict.dat = missindstrict.dat[missindstrict.dat$industryName %in% keepInds,]
missindstrict.dat$strictFlag = 1
missindstrict.dat$onlyWorkingFlag = 1
industries.dat = rbind(industries.dat, missindstrict.dat)
missindnonstrict.dat = read.csv("missingindustriesnonstrict.csv")
keepInds = c(2430, 3433)
missindnonstrict.dat = missindnonstrict.dat[missindnonstrict.dat$industryName %in% keepInds,]
missindnonstrict.dat$strictFlag = 0
missindnonstrict.dat$onlyWorkingFlag = 1
industries.dat = rbind(industries.dat, missindnonstrict.dat)
companies.dat$id = paste(companies.dat$industryName, companies.dat$datayear, sep = "")
companies.dat$companyid = paste(companies.dat$companyName, companies.dat$datayear, sep = "")
industries.dat$id = paste(industries.dat$industryName, industries.dat$datayear, sep = "")
reg.dat = merge(x = companies.dat, y = industries.dat, by = "id", all.x = TRUE)
colnames(reg.dat) = c("id", "industryName", "companyName", "datayear", "state_co", "stError_co", "strictFlag_co", "companyid", "drop", "drop2", "state_ind", "stError_ind", "strictFlag_ind", "onlyWorkingFlag")
reg.dat= reg.dat[,c(1:8, 11:14)]
#reg.dat = merge(x = reg.dat, y = lhs.dat, by = "companyName", all.x = TRUE)
#add lhs variable
RDDATA$companyid = paste(RDDATA$gvkey, RDDATA$datayear, sep = "")
#keep only first entry with each company id
RDDATA = RDDATA[!duplicated(RDDATA[,c('companyid')]),]
#multiIDs= data.frame(freq(ordered(RDDATA$companyid), plot=FALSE))
#multiIDs = multiIDs[multiIDs$Frequence >1,]
reg.dat = merge(reg.dat, RDDATA, by = "companyid", all.x = TRUE) #problem arises here!
reg.dat.nodeletes = reg.dat
#delete any entries where company or industry model was not estimated for these years
reg.dat = reg.dat[!is.na(reg.dat$state_co) & !is.na(reg.dat$state_ind),]
#delete missing LHS--in this reduced sample there are no missing LHS's
reg.dat = reg.dat[!is.na(reg.dat$npatappAdj),]
#model
all.mod = lm(npatappAdj~state_co + stError_co + state_ind + stError_ind, data = reg.dat)
summary(all.mod)
colnames(reg.dat)
cor(panel.dat$xrdAdj, panel.dat$npatappAdj)
cor(x = panel.dat$xrdAdj, y = panel.dat$npatappAdj)
?cor
panel.dat$xrdAdj
panel.dat
summary(panel.dat)
colnames(panel.dat)
panel.dat <- pdata.frame(reg.dat, index = c("companyName", "datayear"), drop.index = TRUE, row.names = TRUE)
colnames(reg.dat)
dim*reg.dat
dim(reg.dat)
load("workCosonlynotstrict.RData")
industries.dat$onlyWorkingFlag = 0
missindstrict.dat = read.csv("missingindustriesstrict.csv")
keepInds = c(800,1400,1540,2090,2092,2300,2340,2451,2452,2611,2621,2840,2844,2870,2911,3089,3250,3270,3317,3360,3420,3430,3442,3444,3452,3550,3569,3571,3590,3630,3728,3812,3824,3844) #industries that run with strict restricition if only working companies are used
missindstrict.dat = missindstrict.dat[missindstrict.dat$industryName %in% keepInds,]
missindstrict.dat$strictFlag = 1
missindstrict.dat$onlyWorkingFlag = 1
industries.dat = rbind(industries.dat, missindstrict.dat)
missindnonstrict.dat = read.csv("missingindustriesnonstrict.csv")
keepInds = c(2430, 3433)
missindnonstrict.dat = missindnonstrict.dat[missindnonstrict.dat$industryName %in% keepInds,]
missindnonstrict.dat$strictFlag = 0
missindnonstrict.dat$onlyWorkingFlag = 1
industries.dat = rbind(industries.dat, missindnonstrict.dat)
#regression analysis=====================================================================
#get lhs variable (number of patents)
#lhs.dat = read.csv("lhsdat.csv")
colnames(companie.sdat)
colnames(companies.dat)
companies.dat$id = paste(companies.dat$industryName, companies.dat$datayear, sep = "")
companies.dat$companyid = paste(companies.dat$companyName, companies.dat$datayear, sep = "")
industries.dat$id = paste(industries.dat$industryName, industries.dat$datayear, sep = "")
reg.dat = merge(x = companies.dat, y = industries.dat, by = "id", all.x = TRUE)
colnames(reg.dat)
colnames(reg.dat) = c("id", "industryName", "companyName", "datayear", "state_co", "stError_co", "strictFlag_co", "companyid", "drop", "drop2", "state_ind", "stError_ind", "strictFlag_ind", "onlyWorkingFlag")
reg.dat= reg.dat[,c(1:8, 11:14)]
colnames(RDDATA)
RDDATA$companyid = paste(RDDATA$gvkey, RDDATA$datayear, sep = "")
#keep only first entry with each company id
RDDATA = RDDATA[!duplicated(RDDATA[,c('companyid')]),]
reg.dat = merge(reg.dat, RDDATA, by = "companyid", all.x = TRUE) #problem arises here!
colnames(reg.dat)
reg.dat.nodeletes = reg.dat
reg.dat = reg.dat[!is.na(reg.dat$state_co) & !is.na(reg.dat$state_ind),]
#delete missing LHS--in this reduced sample there are no missing LHS's
reg.dat = reg.dat[!is.na(reg.dat$npatappAdj),]
colnames(reg.dat)
colnames(reg.dat)[5] = "datayear"
colnames(reg.dat)
panel.dat <- pdata.frame(reg.dat, index = c("companyName", "datayear"), drop.index = TRUE, row.names = TRUE)
cor(x = panel.dat$xrdAdj, y = panel.dat$npatappAdj)
panel.dat$xrdAdj
panel.dat$xrdAdj[1]
panel.dat$xrdAdj[1:10]
as.vector(panel.dat$xrdAdj[1:10])
cor(x = as.vector(panel.dat$xrdAdj), y = as.vector(panel.dat$npatappAdj))
as.vector(panel.dat$xrdAdj)
cor(x = as.vector(panel.dat$xrdAdj), y = as.vector(panel.dat$npatappAdj), na.action = na.exclude)
cor(x = as.vector(panel.dat$xrdAdj), y = as.vector(panel.dat$npatappAdj), na.rm = TRUE)
testdat = data.frame(rd = as.vector(panel.dat$xrdAdj), numPat = as.vector(panel.dat$npatappAdj))
dim(testdat)
dim(na.exclude(testdat))
cor(x = testdat$rd, y = testdat$numPat)
dim(testdat$rd)
length(testdat$rd)
length(testdat$numPat)
numPat
testdat$numPat
cor(x = testdat$rd, y = testdat$numPat, use = complete.obs)
cor(x = testdat$rd, y = testdat$numPat, use = "complete.obs")
cor(reg.dat$xrdAdj, reg.dat$npatappAdj)
cor(reg.dat$xrdAdj, reg.dat$npatappAdj, use = "complete.obs")
head(lag(panel.dat$xrdAdj, 0:2))
lag(panel.dat$xrdAdj, 0:2)[1:20]
lag(panel.dat$xrdAdj, 0:2)[1:20,]
lag(panel.dat$xrdAdj, 0:2)[20:30,]
numLags = 5
laggedVars = lag(panel.dat$xrdAdj, 1:numLags)
laggedVars[,1][1:10]
laggedVars[,2][1:10]
laggedVars = lag(panel.dat$xrdAdj, 1:numLags)
for (i in 1:numLags){
testdat = data.frame(rd = as.vector(laggedVars[,i]), numPat = as.vector(panel.dat$npatappAdj))
testdat = na.exclude(testdat)
cor = cor(x = testdat$rd, y = testdat$numPat, use = "complete.obs")
print(paste(i, cor, sep = "\t"))
}
for (i in 1:numLags){
testdat = data.frame(rd = as.vector(laggedVars[,i]), numPat = as.vector(panel.dat$npatappAdj))
testdat = na.exclude(testdat)
cor = cor(x = testdat$rd, y = testdat$numPat, use = "complete.obs")
print(paste(i, cor, sep = \t))
}
?paste
for (i in 1:numLags){
testdat = data.frame(rd = as.vector(laggedVars[,i]), numPat = as.vector(panel.dat$npatappAdj))
testdat = na.exclude(testdat)
cor = cor(x = testdat$rd, y = testdat$numPat, use = "complete.obs")
print(paste(i, cor, sep = ","))
}
oneVarList[[1]]
nameVector
i = 1
j = 1
curData = oneVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
companyName = companyNameVector[j]
coData = curData[j,]
coData
(length(coData[is.na(coData)])<length(coData))
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
numYears
curMod = ar(coData, AIC = TRUE)
curMod
summary(curMod)
curMod = ar(coData, AIC = FALE, order.max = 2)
curMod
curMod = ar(coData, AIC = FALSE, order.max = 2)
curMod
curMod = arma(coData, AIC = FALSE, order.max = 2)
curMod = arma(coData, order = c(1, 1))
oneVarList[[1]]
j = 16
companyName = companyNameVector[j]
companyName
companyNameVector
j = 5
companyName = companyNameVector[j]
coData = curData[j,]
coData
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
numYears
curMod = ar(coData, AIC = FALSE, order.max = 2)
summary(curMod)
curMod
curMod$ar
curMod = ar(coData, AIC = FALSE, order.max = 2, demean = TRUE)
curMod
curMod$ar
curMod = ar(coData, AIC = FALSE, order.max = 2, demean = FALSE)
curMod
curMod$ar
curMod = ar(coData, AIC = FALSE, order.max = 2, intercept = TRUE)
curMod$ar
curMod = ar.ols(coData, AIC = FALSE, order.max = 2, intercept = TRUE)
curMod
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE)
curMod
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE)
curMod
curMod$ar
curMod$ar[[1]]
i = 1
str(curMod)
curMod$intercept
curMod$x.intercept
i = 1
curData = oneVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData))){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
if (length(coData[is.na(coData)])<length(coData)){
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
#run model
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE)
if (is.null(curMod$ar)){
coeffs = c(NA, NA, NA)
}
else{
coeffs = curMod$ar[[1]]
if(length(coeffs==1)){
coeffs = c(coeffs, NA)
}
int = curMod$x.intercept
coeffs = c(coeffs, int)
}
}
else{
coeffs = c(NA, NA, NA)
}
cur.outdata =data.frame(industry= industryName,company= companyName, coeff1 = coeffs[1], coeff2 = coeffs[2], int = coeffs[3], stringsAsFactors = FALSE)
colnames(cur.outdata)= colnames(output.data)
output.data= rbind(output.data, cur.outdata)
}
output.data = data.frame(matrix(ncol = 5, nrow = 0))
colnames(output.data)= c("industryName", "companyName", "coeff1", "coeff2", "intercept")
i
j
companyName = companyNameVector[j]
coData = curData[j,]
(length(coData[is.na(coData)])<length(coData)){
(length(coData[is.na(coData)])<length(coData))
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
#run model
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE)
(is.null(curMod$ar))
curMod$ar
curMod$ar[[1]]
(is.null(curMod$ar[[1]]))
curMod$ar[1]
j = 5
companyName = companyNameVector[j]
coData = curData[j,]
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
#run model
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE)
curMod$ar[1]
curMod$ar[[1]]
curMod$ar
class(curMod$ar)
j = 1
companyName = companyNameVector[j]
coData = curData[j,]
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE)
curMod$ar
curMod$ar[1]
(is.na(curMod$ar[1]))
curData = oneVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData))){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
if (length(coData[is.na(coData)])<length(coData)){
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
#run model
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE)
if (is.na(curMod$ar[1])){
coeffs = c(NA, NA, NA)
}
else{
coeffs = curMod$ar[[1]]
if(length(coeffs==1)){
coeffs = c(coeffs, NA)
}
int = curMod$x.intercept
coeffs = c(coeffs, int)
}
}
else{
coeffs = c(NA, NA, NA)
}
cur.outdata =data.frame(industry= industryName,company= companyName, coeff1 = coeffs[1], coeff2 = coeffs[2], int = coeffs[3], stringsAsFactors = FALSE)
colnames(cur.outdata)= colnames(output.data)
output.data= rbind(output.data, cur.outdata)
}
j
for (j in 1:(nrow(curData))){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
if (length(coData[is.na(coData)])<length(coData)){
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
#run model
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE, na.action = na.exclude)
if (is.na(curMod$ar[1])){
coeffs = c(NA, NA, NA)
}
else{
coeffs = curMod$ar[[1]]
if(length(coeffs==1)){
coeffs = c(coeffs, NA)
}
int = curMod$x.intercept
coeffs = c(coeffs, int)
}
}
else{
coeffs = c(NA, NA, NA)
}
cur.outdata =data.frame(industry= industryName,company= companyName, coeff1 = coeffs[1], coeff2 = coeffs[2], int = coeffs[3], stringsAsFactors = FALSE)
colnames(cur.outdata)= colnames(output.data)
output.data= rbind(output.data, cur.outdata)
}
output.data
output.data = data.frame(matrix(ncol = 5, nrow = 0))
colnames(output.data)= c("industryName", "companyName", "coeff1", "coeff2", "intercept")
for (i in 1:length(oneVarList)){ #industry loop
curData = oneVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData))){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
if (length(coData[is.na(coData)])<length(coData)){
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
#run model
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE, na.action = na.exclude)
if (is.na(curMod$ar[1])){
coeffs = c(NA, NA, NA)
}
else{
coeffs = curMod$ar[[1]]
if(length(coeffs==1)){
coeffs = c(coeffs, NA)
}
int = curMod$x.intercept
coeffs = c(coeffs, int)
}
}
else{
coeffs = c(NA, NA, NA)
}
cur.outdata =data.frame(industry= industryName,company= companyName, coeff1 = coeffs[1], coeff2 = coeffs[2], int = coeffs[3], stringsAsFactors = FALSE)
colnames(cur.outdata)= colnames(output.data)
output.data= rbind(output.data, cur.outdata)
}
}
write.csv(output.data, "arout.txt")
output.data = data.frame(matrix(ncol = 5, nrow = 0))
colnames(output.data)= c("industryName", "companyName", "coeff1", "coeff2", "intercept")
for (i in 1:length(oneVarList)){ #industry loop
curData = oneVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData))){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
if (length(coData[is.na(coData)])<length(coData)){
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
#run model
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE, na.action = na.ignore)
if (is.na(curMod$ar[1])){
coeffs = c(NA, NA, NA)
}
else{
coeffs = curMod$ar[[1]]
if(length(coeffs==1)){
coeffs = c(coeffs, NA)
}
int = curMod$x.intercept
coeffs = c(coeffs, int)
}
}
else{
coeffs = c(NA, NA, NA)
}
cur.outdata =data.frame(industry= industryName,company= companyName, coeff1 = coeffs[1], coeff2 = coeffs[2], int = coeffs[3], stringsAsFactors = FALSE)
colnames(cur.outdata)= colnames(output.data)
output.data= rbind(output.data, cur.outdata)
}
}
i
j
j = 5
companyName = companyNameVector[j]
coData = curData[j,]
nonNA1 = which(!is.na(coData)) #coData now a vector
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
coData = coData[startIndex1:endIndex1]
numYears = length(coData)
coData
curMod = ar.ols(coData, AIC = TRUE, order.max = 2, intercept = TRUE, demean = FALSE, na.action = na.exclude)
predict(curMod)
predict("curMod")
predict(curMod, coData)
coData
