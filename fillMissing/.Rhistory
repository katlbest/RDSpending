nonNA1 = which(!is.na(coData))
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
startYear = startYearList[[i]][1]-startIndex1 + 1
coNum = coNum[startIndex1:endIndex1]
coRev= coRev[startIndex1:endIndex1]
coData = na.trim(coData)
numYears = length(coData)
numYears
coNum
coRev
coData
(numYears > 14 & length(coData)== length(na.exclude(coData)))
coDataUse = coData[1:10] #use first 10 points for model
curPointList = data.frame(matrix(ncol =7, nrow = numYears))
colnames(curPointList) = c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
curPointList$raw= coData
curPointList$rawRev= coRev
curPointList$industryName = industryName
curPointList$companyName = companyName
curPointList$year = c(startYear:(startYear+numYears-1))
curPointList$numPats = coNum
curMod = NA
preds = NA
coDataUse
revUse = coRev[1:10]
numUse = coNum[1:10]
mydat = data.frame(rev=revUse, numPats = numUse, raw= coDataUse)
mydat
mydat = na.exclude(mydat)
nrow(mydat)
curMod = lm(rev~numPats+raw, data = myDat)
curMod = lm(rev~numPats+raw, data = mydat)
curMod
preddat = data.frame(numPats = coNum[11:numYears], raw = coData[11:numYears])
preddat
preds = predict(curMod,preddat)
preds
pointList = data.frame(matrix(ncol = 7, nrow = 0))
colnames(pointList) =c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
for (i in 1:length(threeVarList)){ #industry loop
curData = threeVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData)/2)){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
coNum = curData[j+nrow(curData)/3,]
coRev = curData[j+(nrow(curData)/3)*2,]
if (length(coData[is.na(coData)])<length(coData)){ #we have some non-NA entries
nonNA1 = which(!is.na(coData))
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
startYear = startYearList[[i]][1]-startIndex1 + 1
coNum = coNum[startIndex1:endIndex1]
coRev= coRev[startIndex1:endIndex1]
coData = na.trim(coData)
numYears = length(coData)
if (numYears > 14 & length(coData)== length(na.exclude(coData))){ #we must have 15 non-NA points
coDataUse = coData[1:10] #use first 10 points for model
revUse = coRev[1:10]
numUse = coNum[1:10]
curPointList = data.frame(matrix(ncol =7, nrow = numYears))
colnames(curPointList) = c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
curPointList$raw= coData
curPointList$rawRev= coRev
curPointList$industryName = industryName
curPointList$companyName = companyName
curPointList$year = c(startYear:(startYear+numYears-1))
curPointList$numPats = coNum
#run revenue prediction
curMod = NA
preds = NA
if(na.exclude(coDataUse){
mydat = data.frame(rev=revUse, numPats = numUse, raw= coDataUse)
mydat = na.exclude(mydat)
if(nrow(mydat)>2){
curMod = lm(rev~numPats+raw, data = mydat)
preddat = data.frame(numPats = coNum[11:numYears], raw = coData[11:numYears])
preds = predict(curMod,preddat)
curPointList$revEst[11:numYears]= preds
}
}
}
}
}
}
#revenue analysis--using only companies with 15 data points
pointList = data.frame(matrix(ncol = 7, nrow = 0))
colnames(pointList) =c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
for (i in 1:length(threeVarList)){ #industry loop
curData = threeVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData)/2)){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
coNum = curData[j+nrow(curData)/3,]
coRev = curData[j+(nrow(curData)/3)*2,]
if (length(coData[is.na(coData)])<length(coData)){ #we have some non-NA entries
nonNA1 = which(!is.na(coData))
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
startYear = startYearList[[i]][1]-startIndex1 + 1
coNum = coNum[startIndex1:endIndex1]
coRev= coRev[startIndex1:endIndex1]
coData = na.trim(coData)
numYears = length(coData)
if (numYears > 14 & length(coData)== length(na.exclude(coData))){ #we must have 15 non-NA points
coDataUse = coData[1:10] #use first 10 points for model
revUse = coRev[1:10]
numUse = coNum[1:10]
curPointList = data.frame(matrix(ncol =7, nrow = numYears))
colnames(curPointList) = c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
curPointList$raw= coData
curPointList$rawRev= coRev
curPointList$industryName = industryName
curPointList$companyName = companyName
curPointList$year = c(startYear:(startYear+numYears-1))
curPointList$numPats = coNum
#run revenue prediction
curMod = NA
preds = NA
mydat = data.frame(rev=revUse, numPats = numUse, raw= coDataUse)
mydat = na.exclude(mydat)
if(nrow(mydat)>2){
curMod = lm(rev~numPats+raw, data = mydat)
preddat = data.frame(numPats = coNum[11:numYears], raw = coData[11:numYears])
preds = predict(curMod,preddat)
curPointList$revEst[11:numYears]= preds
}
}
}
}
}
}
i
j
companyName = companyNameVector[j]
coData = curData[j,]
coNum = curData[j+nrow(curData)/3,]
coRev = curData[j+(nrow(curData)/3)*2,]
curData
dim(curData)
(nrow(curData)/3)*2
j
26+24
46+24
j
rownames(curData[j])
rownames(curData)[j]
rownames(curData)[(nrow(curData)/3)+j]
rownames(curData)[(nrow(curData)/3)+2]
rownames(curData)[(nrow(curData)/3)*2+j]
(nrow(curData)/3)+j
rownames(curData)
threeVarList[1]
dim(threeVarList[[1]])
69/3
rownames(threeVarList[[1]])
pointList = data.frame(matrix(ncol = 7, nrow = 0))
colnames(pointList) =c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
for (i in 1:length(threeVarList)){ #industry loop
curData = threeVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData)/3)){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
coNum = curData[j+nrow(curData)/3,]
coRev = curData[j+(nrow(curData)/3)*2,]
if (length(coData[is.na(coData)])<length(coData)){ #we have some non-NA entries
nonNA1 = which(!is.na(coData))
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
startYear = startYearList[[i]][1]-startIndex1 + 1
coNum = coNum[startIndex1:endIndex1]
coRev= coRev[startIndex1:endIndex1]
coData = na.trim(coData)
numYears = length(coData)
if (numYears > 14 & length(coData)== length(na.exclude(coData))){ #we must have 15 non-NA points
coDataUse = coData[1:10] #use first 10 points for model
revUse = coRev[1:10]
numUse = coNum[1:10]
curPointList = data.frame(matrix(ncol =7, nrow = numYears))
colnames(curPointList) = c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
curPointList$raw= coData
curPointList$rawRev= coRev
curPointList$industryName = industryName
curPointList$companyName = companyName
curPointList$year = c(startYear:(startYear+numYears-1))
curPointList$numPats = coNum
#run revenue prediction
curMod = NA
preds = NA
mydat = data.frame(rev=revUse, numPats = numUse, raw= coDataUse)
mydat = na.exclude(mydat)
if(nrow(mydat)>2){
curMod = lm(rev~numPats+raw, data = mydat)
preddat = data.frame(numPats = coNum[11:numYears], raw = coData[11:numYears])
preds = predict(curMod,preddat)
curPointList$revEst[11:numYears]= preds
}
}
}
}
}
}
warnings()
i
j
(length(mydat$raw)>length(coDataUse[mydat$raw==0]$raw))
(length(mydat$raw)>length(mydat[mydat$raw==0]$raw))
#revenue analysis--using only companies with 15 data points
pointList = data.frame(matrix(ncol = 7, nrow = 0))
colnames(pointList) =c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
for (i in 1:length(threeVarList)){ #industry loop
curData = threeVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData)/3)){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
coNum = curData[j+nrow(curData)/3,]
coRev = curData[j+(nrow(curData)/3)*2,]
if (length(coData[is.na(coData)])<length(coData)){ #we have some non-NA entries
nonNA1 = which(!is.na(coData))
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
startYear = startYearList[[i]][1]-startIndex1 + 1
coNum = coNum[startIndex1:endIndex1]
coRev= coRev[startIndex1:endIndex1]
coData = na.trim(coData)
numYears = length(coData)
if (numYears > 14 & length(coData)== length(na.exclude(coData))){ #we must have 15 non-NA points
coDataUse = coData[1:10] #use first 10 points for model
revUse = coRev[1:10]
numUse = coNum[1:10]
curPointList = data.frame(matrix(ncol =7, nrow = numYears))
colnames(curPointList) = c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
curPointList$raw= coData
curPointList$rawRev= coRev
curPointList$industryName = industryName
curPointList$companyName = companyName
curPointList$year = c(startYear:(startYear+numYears-1))
curPointList$numPats = coNum
#run revenue prediction
curMod = NA
preds = NA
mydat = data.frame(rev=revUse, numPats = numUse, raw= coDataUse)
mydat = na.exclude(mydat)
if(nrow(mydat)>3){
if(length(mydat$raw)>length(mydat[mydat$raw==0]$raw)){
curMod = lm(rev~numPats+raw, data = mydat)
preddat = data.frame(numPats = coNum[11:numYears], raw = coData[11:numYears])
preds = predict(curMod,preddat)
curPointList$revEst[11:numYears]= preds
}
}
}
}
}
}
i
j
(length(mydat$raw)>length(mydat[mydat$raw==0,]$raw))
mydat
pointList = data.frame(matrix(ncol = 7, nrow = 0))
colnames(pointList) =c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
for (i in 1:length(threeVarList)){ #industry loop
curData = threeVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData)/3)){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
coNum = curData[j+nrow(curData)/3,]
coRev = curData[j+(nrow(curData)/3)*2,]
if (length(coData[is.na(coData)])<length(coData)){ #we have some non-NA entries
nonNA1 = which(!is.na(coData))
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
startYear = startYearList[[i]][1]-startIndex1 + 1
coNum = coNum[startIndex1:endIndex1]
coRev= coRev[startIndex1:endIndex1]
coData = na.trim(coData)
numYears = length(coData)
if (numYears > 14 & length(coData)== length(na.exclude(coData))){ #we must have 15 non-NA points
coDataUse = coData[1:10] #use first 10 points for model
revUse = coRev[1:10]
numUse = coNum[1:10]
curPointList = data.frame(matrix(ncol =7, nrow = numYears))
colnames(curPointList) = c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
curPointList$raw= coData
curPointList$rawRev= coRev
curPointList$industryName = industryName
curPointList$companyName = companyName
curPointList$year = c(startYear:(startYear+numYears-1))
curPointList$numPats = coNum
#run revenue prediction
curMod = NA
preds = NA
mydat = data.frame(rev=revUse, numPats = numUse, raw= coDataUse)
mydat = na.exclude(mydat)
if(nrow(mydat)>3){
if(length(mydat$raw)>length(mydat[mydat$raw==0,]$raw)){
curMod = lm(rev~numPats+raw, data = mydat)
preddat = data.frame(numPats = coNum[11:numYears], raw = coData[11:numYears])
preds = predict(curMod,preddat)
curPointList$revEst[11:numYears]= preds
}
}
}
}
}
}
pointList = data.frame(matrix(ncol = 7, nrow = 0))
colnames(pointList) =c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
for (i in 1:length(threeVarList)){ #industry loop
curData = threeVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData)/3)){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
coNum = curData[j+nrow(curData)/3,]
coRev = curData[j+(nrow(curData)/3)*2,]
if (length(coData[is.na(coData)])<length(coData)){ #we have some non-NA entries
nonNA1 = which(!is.na(coData))
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
startYear = startYearList[[i]][1]-startIndex1 + 1
coNum = coNum[startIndex1:endIndex1]
coRev= coRev[startIndex1:endIndex1]
coData = na.trim(coData)
numYears = length(coData)
if (numYears > 14 & length(coData)== length(na.exclude(coData))){ #we must have 15 non-NA points
coDataUse = coData[1:10] #use first 10 points for model
revUse = coRev[1:10]
numUse = coNum[1:10]
curPointList = data.frame(matrix(ncol =7, nrow = numYears))
colnames(curPointList) = c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
curPointList$raw= coData
curPointList$rawRev= coRev
curPointList$industryName = industryName
curPointList$companyName = companyName
curPointList$year = c(startYear:(startYear+numYears-1))
curPointList$numPats = coNum
#run revenue prediction
curMod = NA
preds = NA
mydat = data.frame(rev=revUse, numPats = numUse, raw= coDataUse)
mydat = na.exclude(mydat)
if(nrow(mydat)>3){
if(length(mydat$raw)>length(mydat[mydat$raw==0,]$raw)){ #raw r&d not all 0
if(length(mydat$numPats)>length(mydat[mydat$raw==0,]$numPats)){ #raw r&d not all 0
curMod = lm(rev~numPats+raw, data = mydat)
preddat = data.frame(numPats = coNum[11:numYears], raw = coData[11:numYears])
preds = predict(curMod,preddat)
curPointList$revEst[11:numYears]= preds
}
}
}
}
}
}
}
pointList = data.frame(matrix(ncol = 7, nrow = 0))
colnames(pointList) =c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
for (i in 1:length(threeVarList)){ #industry loop
curData = threeVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData)/3)){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
coNum = curData[j+nrow(curData)/3,]
coRev = curData[j+(nrow(curData)/3)*2,]
if (length(coData[is.na(coData)])<length(coData)){ #we have some non-NA entries
nonNA1 = which(!is.na(coData))
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
startYear = startYearList[[i]][1]-startIndex1 + 1
coNum = coNum[startIndex1:endIndex1]
coRev= coRev[startIndex1:endIndex1]
coData = na.trim(coData)
numYears = length(coData)
if (numYears > 14 & length(coData)== length(na.exclude(coData))){ #we must have 15 non-NA points
coDataUse = coData[1:10] #use first 10 points for model
revUse = coRev[1:10]
numUse = coNum[1:10]
curPointList = data.frame(matrix(ncol =7, nrow = numYears))
colnames(curPointList) = c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
curPointList$raw= coData
curPointList$rawRev= coRev
curPointList$industryName = industryName
curPointList$companyName = companyName
curPointList$year = c(startYear:(startYear+numYears-1))
curPointList$numPats = coNum
#run revenue prediction
curMod = NA
preds = NA
mydat = data.frame(rev=revUse, numPats = numUse, raw= coDataUse)
mydat = na.exclude(mydat)
if(nrow(mydat)>3){
countZeroRD = length(mydat[mydat$raw==0,]$raw)
countZeroPats = length(mydat[mydat$numPats==0,]$numPats)
if(countZeroRD < nrow(mydat) & countZeroPats < nrow(mydat)){ #inputs are not al zero
curMod = lm(rev~numPats+raw, data = mydat)
preddat = data.frame(numPats = coNum[11:numYears], raw = coData[11:numYears])
preds = predict(curMod,preddat)
curPointList$revEst[11:numYears]= preds
}
}
}
}
}
}
write.csv(pointList, "revenueout.csv")
pointList = data.frame(matrix(ncol = 7, nrow = 0))
colnames(pointList) =c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
for (i in 1:length(threeVarList)){ #industry loop
curData = threeVarList[[i]]
industryName = nameVector[i]
companyNameVector = rownames(curData)
for (j in 1:(nrow(curData)/3)){#for each company, run model
#set up inputdata
companyName = companyNameVector[j]
coData = curData[j,]
coNum = curData[j+nrow(curData)/3,]
coRev = curData[j+(nrow(curData)/3)*2,]
if (length(coData[is.na(coData)])<length(coData)){ #we have some non-NA entries
nonNA1 = which(!is.na(coData))
startIndex1 = min(nonNA1)
endIndex1 = max(nonNA1)
startYear = startYearList[[i]][1]-startIndex1 + 1
coNum = coNum[startIndex1:endIndex1]
coRev= coRev[startIndex1:endIndex1]
coData = na.trim(coData)
numYears = length(coData)
if (numYears > 14 & length(coData)== length(na.exclude(coData))){ #we must have 15 non-NA points
coDataUse = coData[1:10] #use first 10 points for model
revUse = coRev[1:10]
numUse = coNum[1:10]
curPointList = data.frame(matrix(ncol =7, nrow = numYears))
colnames(curPointList) = c("industryName","companyName", "year", "raw","numPats","rawRev", "revEst")
curPointList$raw= coData
curPointList$rawRev= coRev
curPointList$industryName = industryName
curPointList$companyName = companyName
curPointList$year = c(startYear:(startYear+numYears-1))
curPointList$numPats = coNum
#run revenue prediction
curMod = NA
preds = NA
mydat = data.frame(rev=revUse, numPats = numUse, raw= coDataUse)
mydat = na.exclude(mydat)
if(nrow(mydat)>3){
countZeroRD = length(mydat[mydat$raw==0,]$raw)
countZeroPats = length(mydat[mydat$numPats==0,]$numPats)
if(countZeroRD < nrow(mydat) & countZeroPats < nrow(mydat)){ #inputs are not al zero
curMod = lm(rev~numPats+raw, data = mydat)
preddat = data.frame(numPats = coNum[11:numYears], raw = coData[11:numYears])
preds = predict(curMod,preddat)
curPointList$revEst[11:numYears]= preds
}
}
colnames(curPointList)= colnames(pointList)
pointList = rbind(pointList, curPointList)
}
}
}
}
write.csv(pointList, "revenueout.csv")
length(levels(as.factor(pointList$companyName)))
successREV = pointList[!is.na(pointList$revEst),]
length(levels(as.factor(successREV$companyName)))
colnames(successREV)
MseRev = sum((successREV$revEst-successREV$rawRev)^2)
MseRev
successREV = pointList[!is.na(pointList$rawRev),]
MseRev = sum((successREV$revEst-successREV$rawRev)^2)
MseRev
successREV$revEst
successREV = pointList[!is.na(pointList$revEst),]
MseRev = sum((successREV$revEst-successREV$rawRev)^2)
MseRev
dim(pointList)
dim(successREV)
successREV$revEst
successREV$rawRev
successREV = pointList[!is.na(pointList$revEst),]
MseRev = sum((successREV$revEst-successREV$rawRev)^2)
MseRev
successREV = pointList[!is.na(pointList$revEst),]
successREV = successREV[!is.na(successREV$rawRev),]
MseRev = sum((successREV$revEst-successREV$rawRev)^2)
MseRev
successREV$seREV = (successREV$revEst-successREV$rawRev)^2
successREV$seREV = (successREV$revEst-successREV$rawRev)^2
errors_REV = data.frame(companyName = aggregate(successREV$seREV, list(gp=successREV$companyName), sum)$gp,
mseREV = aggregate(successREV$seREV, list(gp=successREV$companyName), mean)$x)
mean(errors_REV$mseREV)
sd(errors_REV$mseREV)
write.csv(RDDATA, "RDwithRevenue.csv")
